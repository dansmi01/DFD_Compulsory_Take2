// <auto-generated />
using System;
using DFD_StdMgm;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DFD_StdMgm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251024073137_CreateModelsAndRelationships")]
    partial class CreateModelsAndRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DFD_StdMgm.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CourseStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessorID")
                        .HasColumnType("int");

                    b.HasKey("CourseID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("ProfessorID");

                    b.ToTable("Course", (string)null);

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            CourseName = "Mathematics"
                        },
                        new
                        {
                            CourseID = 2,
                            CourseName = "Physics"
                        },
                        new
                        {
                            CourseID = 3,
                            CourseName = "Chemistry"
                        },
                        new
                        {
                            CourseID = 4,
                            CourseName = "Biology"
                        },
                        new
                        {
                            CourseID = 5,
                            CourseName = "Computer Science"
                        });
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Enrollment", b =>
                {
                    b.Property<long>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment", (string)null);

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1L,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2L,
                            CourseId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 3L,
                            CourseId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 4L,
                            CourseId = 4,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 5L,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 6L,
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 7L,
                            CourseId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 8L,
                            CourseId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 9L,
                            CourseId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 10L,
                            CourseId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 11L,
                            CourseId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 12L,
                            CourseId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 13L,
                            CourseId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 14L,
                            CourseId = 3,
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("ProfessorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessorID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Professor", (string)null);
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("StudentAge")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            StudentAge = 20,
                            StudentName = "Alice Johnson"
                        },
                        new
                        {
                            StudentID = 2,
                            StudentAge = 21,
                            StudentName = "Bob Smith"
                        },
                        new
                        {
                            StudentID = 3,
                            StudentAge = 22,
                            StudentName = "Charlie Brown"
                        },
                        new
                        {
                            StudentID = 4,
                            StudentAge = 23,
                            StudentName = "Diana Prince"
                        },
                        new
                        {
                            StudentID = 5,
                            StudentAge = 24,
                            StudentName = "Ethan Hunt"
                        });
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Course", b =>
                {
                    b.HasOne("DFD_StdMgm.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("DFD_StdMgm.Models.Professor", "Professor")
                        .WithMany("Courses")
                        .HasForeignKey("ProfessorID");

                    b.Navigation("Department");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Enrollment", b =>
                {
                    b.HasOne("DFD_StdMgm.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DFD_StdMgm.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Professor", b =>
                {
                    b.HasOne("DFD_StdMgm.Models.Department", "Department")
                        .WithMany("Professors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Professors");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Professor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("DFD_StdMgm.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
